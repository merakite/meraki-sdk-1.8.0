/**
 * MerakiDashboardAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Neighbor
 */
class Neighbor extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.ip = this.constructor.getValue(obj.ip);
        this.remoteAsNumber = this.constructor.getValue(obj.remoteAsNumber);
        this.receiveLimit = this.constructor.getValue(obj.receiveLimit);
        this.allowTransit = this.constructor.getValue(obj.allowTransit);
        this.ebgpHoldTimer = this.constructor.getValue(obj.ebgpHoldTimer);
        this.ebgpMultihop = this.constructor.getValue(obj.ebgpMultihop);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'ip', realName: 'ip' },
            { name: 'remoteAsNumber', realName: 'remoteAsNumber' },
            { name: 'receiveLimit', realName: 'receiveLimit' },
            { name: 'allowTransit', realName: 'allowTransit' },
            { name: 'ebgpHoldTimer', realName: 'ebgpHoldTimer' },
            { name: 'ebgpMultihop', realName: 'ebgpMultihop' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Neighbor;
