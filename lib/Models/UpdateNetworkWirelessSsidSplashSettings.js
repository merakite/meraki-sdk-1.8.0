/**
 * MerakiDashboardAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of UpdateNetworkWirelessSsidSplashSettings
 */
class UpdateNetworkWirelessSsidSplashSettings extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.splashUrl = this.constructor.getValue(obj.splashUrl);
        this.useSplashUrl = this.constructor.getValue(obj.useSplashUrl);
        this.splashTimeout = this.constructor.getValue(obj.splashTimeout);
        this.redirectUrl = this.constructor.getValue(obj.redirectUrl);
        this.useRedirectUrl = this.constructor.getValue(obj.useRedirectUrl);
        this.welcomeMessage = this.constructor.getValue(obj.welcomeMessage);
        this.splashLogo = this.constructor.getValue(obj.splashLogo);
        this.splashImage = this.constructor.getValue(obj.splashImage);
        this.splashPrepaidFront = this.constructor.getValue(obj.splashPrepaidFront);
        this.blockAllTrafficBeforeSignOn =
          this.constructor.getValue(obj.blockAllTrafficBeforeSignOn);
        this.controllerDisconnectionBehavior =
          this.constructor.getValue(obj.controllerDisconnectionBehavior);
        this.allowSimultaneousLogins = this.constructor.getValue(obj.allowSimultaneousLogins);
        this.guestSponsorship = this.constructor.getValue(obj.guestSponsorship);
        this.billing = this.constructor.getValue(obj.billing);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'splashUrl', realName: 'splashUrl' },
            { name: 'useSplashUrl', realName: 'useSplashUrl' },
            { name: 'splashTimeout', realName: 'splashTimeout' },
            { name: 'redirectUrl', realName: 'redirectUrl' },
            { name: 'useRedirectUrl', realName: 'useRedirectUrl' },
            { name: 'welcomeMessage', realName: 'welcomeMessage' },
            { name: 'splashLogo', realName: 'splashLogo', type: 'SplashLogo' },
            { name: 'splashImage', realName: 'splashImage', type: 'SplashImage' },
            {
                name: 'splashPrepaidFront',
                realName: 'splashPrepaidFront',
                type: 'SplashPrepaidFront',
            },
            { name: 'blockAllTrafficBeforeSignOn', realName: 'blockAllTrafficBeforeSignOn' },
            {
                name: 'controllerDisconnectionBehavior',
                realName: 'controllerDisconnectionBehavior',
            },
            { name: 'allowSimultaneousLogins', realName: 'allowSimultaneousLogins' },
            { name: 'guestSponsorship', realName: 'guestSponsorship', type: 'GuestSponsorship' },
            { name: 'billing', realName: 'billing', type: 'Billing' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = UpdateNetworkWirelessSsidSplashSettings;
