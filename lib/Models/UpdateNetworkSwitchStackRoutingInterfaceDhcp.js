/**
 * MerakiDashboardAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of UpdateNetworkSwitchStackRoutingInterfaceDhcp
 */
class UpdateNetworkSwitchStackRoutingInterfaceDhcp extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.dhcpMode = this.constructor.getValue(obj.dhcpMode);
        this.dhcpRelayServerIps = this.constructor.getValue(obj.dhcpRelayServerIps);
        this.dhcpLeaseTime = this.constructor.getValue(obj.dhcpLeaseTime);
        this.dnsNameserversOption = this.constructor.getValue(obj.dnsNameserversOption);
        this.dnsCustomNameservers = this.constructor.getValue(obj.dnsCustomNameservers);
        this.bootOptionsEnabled = this.constructor.getValue(obj.bootOptionsEnabled);
        this.bootNextServer = this.constructor.getValue(obj.bootNextServer);
        this.bootFileName = this.constructor.getValue(obj.bootFileName);
        this.dhcpOptions = this.constructor.getValue(obj.dhcpOptions);
        this.reservedIpRanges = this.constructor.getValue(obj.reservedIpRanges);
        this.fixedIpAssignments = this.constructor.getValue(obj.fixedIpAssignments);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'dhcpMode', realName: 'dhcpMode' },
            { name: 'dhcpRelayServerIps', realName: 'dhcpRelayServerIps', array: true },
            { name: 'dhcpLeaseTime', realName: 'dhcpLeaseTime' },
            { name: 'dnsNameserversOption', realName: 'dnsNameserversOption' },
            { name: 'dnsCustomNameservers', realName: 'dnsCustomNameservers', array: true },
            { name: 'bootOptionsEnabled', realName: 'bootOptionsEnabled' },
            { name: 'bootNextServer', realName: 'bootNextServer' },
            { name: 'bootFileName', realName: 'bootFileName' },
            { name: 'dhcpOptions', realName: 'dhcpOptions', array: true, type: 'DhcpOption' },
            {
                name: 'reservedIpRanges',
                realName: 'reservedIpRanges',
                array: true,
                type: 'ReservedIpRange1',
            },
            {
                name: 'fixedIpAssignments',
                realName: 'fixedIpAssignments',
                array: true,
                type: 'FixedIpAssignment1',
            },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = UpdateNetworkSwitchStackRoutingInterfaceDhcp;
