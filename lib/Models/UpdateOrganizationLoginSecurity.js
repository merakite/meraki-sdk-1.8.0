/**
 * MerakiDashboardAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of UpdateOrganizationLoginSecurity
 */
class UpdateOrganizationLoginSecurity extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.enforcePasswordExpiration = this.constructor.getValue(obj.enforcePasswordExpiration);
        this.passwordExpirationDays = this.constructor.getValue(obj.passwordExpirationDays);
        this.enforceDifferentPasswords = this.constructor.getValue(obj.enforceDifferentPasswords);
        this.numDifferentPasswords = this.constructor.getValue(obj.numDifferentPasswords);
        this.enforceStrongPasswords = this.constructor.getValue(obj.enforceStrongPasswords);
        this.enforceAccountLockout = this.constructor.getValue(obj.enforceAccountLockout);
        this.accountLockoutAttempts = this.constructor.getValue(obj.accountLockoutAttempts);
        this.enforceIdleTimeout = this.constructor.getValue(obj.enforceIdleTimeout);
        this.idleTimeoutMinutes = this.constructor.getValue(obj.idleTimeoutMinutes);
        this.enforceTwoFactorAuth = this.constructor.getValue(obj.enforceTwoFactorAuth);
        this.enforceLoginIpRanges = this.constructor.getValue(obj.enforceLoginIpRanges);
        this.loginIpRanges = this.constructor.getValue(obj.loginIpRanges);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'enforcePasswordExpiration', realName: 'enforcePasswordExpiration' },
            { name: 'passwordExpirationDays', realName: 'passwordExpirationDays' },
            { name: 'enforceDifferentPasswords', realName: 'enforceDifferentPasswords' },
            { name: 'numDifferentPasswords', realName: 'numDifferentPasswords' },
            { name: 'enforceStrongPasswords', realName: 'enforceStrongPasswords' },
            { name: 'enforceAccountLockout', realName: 'enforceAccountLockout' },
            { name: 'accountLockoutAttempts', realName: 'accountLockoutAttempts' },
            { name: 'enforceIdleTimeout', realName: 'enforceIdleTimeout' },
            { name: 'idleTimeoutMinutes', realName: 'idleTimeoutMinutes' },
            { name: 'enforceTwoFactorAuth', realName: 'enforceTwoFactorAuth' },
            { name: 'enforceLoginIpRanges', realName: 'enforceLoginIpRanges' },
            { name: 'loginIpRanges', realName: 'loginIpRanges', array: true },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = UpdateOrganizationLoginSecurity;
