/**
 * MerakiDashboardAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const UpdateDevice = require('../lib/Models/UpdateDevice');
const BlinkDeviceLeds = require('../lib/Models/BlinkDeviceLeds');
const GenerateDeviceCameraSnapshot = require('../lib/Models/GenerateDeviceCameraSnapshot');
const UpdateDeviceCameraQualityAndRetention =
  require('../lib/Models/UpdateDeviceCameraQualityAndRetention');
const UpdateDeviceCameraSense = require('../lib/Models/UpdateDeviceCameraSense');
const UpdateDeviceCameraVideoSettings = require('../lib/Models/UpdateDeviceCameraVideoSettings');
const UpdateDeviceCellularGatewayLan = require('../lib/Models/UpdateDeviceCellularGatewayLan');
const ReservedIpRange = require('../lib/Models/ReservedIpRange');
const FixedIpAssignment = require('../lib/Models/FixedIpAssignment');
const UpdateDeviceCellularGatewayPortForwardingRules =
  require('../lib/Models/UpdateDeviceCellularGatewayPortForwardingRules');
const Rule = require('../lib/Models/Rule');
const UpdateDeviceManagementInterface = require('../lib/Models/UpdateDeviceManagementInterface');
const Wan1 = require('../lib/Models/Wan1');
const Wan2 = require('../lib/Models/Wan2');
const CycleDeviceSwitchPorts = require('../lib/Models/CycleDeviceSwitchPorts');
const UpdateDeviceSwitchPort = require('../lib/Models/UpdateDeviceSwitchPort');
const CreateDeviceSwitchRoutingInterface =
  require('../lib/Models/CreateDeviceSwitchRoutingInterface');
const OspfSettings = require('../lib/Models/OspfSettings');
const UpdateDeviceSwitchRoutingInterface =
  require('../lib/Models/UpdateDeviceSwitchRoutingInterface');
const OspfSettings1 = require('../lib/Models/OspfSettings1');
const UpdateDeviceSwitchRoutingInterfaceDhcp =
  require('../lib/Models/UpdateDeviceSwitchRoutingInterfaceDhcp');
const DhcpOption = require('../lib/Models/DhcpOption');
const ReservedIpRange1 = require('../lib/Models/ReservedIpRange1');
const FixedIpAssignment1 = require('../lib/Models/FixedIpAssignment1');
const CreateDeviceSwitchRoutingStaticRoute =
  require('../lib/Models/CreateDeviceSwitchRoutingStaticRoute');
const UpdateDeviceSwitchRoutingStaticRoute =
  require('../lib/Models/UpdateDeviceSwitchRoutingStaticRoute');
const UpdateDeviceSwitchWarmSpare = require('../lib/Models/UpdateDeviceSwitchWarmSpare');
const UpdateDeviceWirelessBluetoothSettings =
  require('../lib/Models/UpdateDeviceWirelessBluetoothSettings');
const UpdateDeviceWirelessRadioSettings =
  require('../lib/Models/UpdateDeviceWirelessRadioSettings');
const TwoFourGhzSettings = require('../lib/Models/TwoFourGhzSettings');
const FiveGhzSettings = require('../lib/Models/FiveGhzSettings');
const UpdateNetwork = require('../lib/Models/UpdateNetwork');
const UpdateNetworkAlertsSettings = require('../lib/Models/UpdateNetworkAlertsSettings');
const DefaultDestinations = require('../lib/Models/DefaultDestinations');
const Alert = require('../lib/Models/Alert');
const AlertDestinations = require('../lib/Models/AlertDestinations');
const UpdateNetworkApplianceConnectivityMonitoringDestinations =
  require('../lib/Models/UpdateNetworkApplianceConnectivityMonitoringDestinations');
const Destination = require('../lib/Models/Destination');
const UpdateNetworkApplianceContentFiltering =
  require('../lib/Models/UpdateNetworkApplianceContentFiltering');
const UpdateNetworkApplianceFirewallCellularFirewallRules =
  require('../lib/Models/UpdateNetworkApplianceFirewallCellularFirewallRules');
const Rule1 = require('../lib/Models/Rule1');
const UpdateNetworkApplianceFirewallFirewalledService =
  require('../lib/Models/UpdateNetworkApplianceFirewallFirewalledService');
const UpdateNetworkApplianceFirewallInboundFirewallRules =
  require('../lib/Models/UpdateNetworkApplianceFirewallInboundFirewallRules');
const UpdateNetworkApplianceFirewallL3FirewallRules =
  require('../lib/Models/UpdateNetworkApplianceFirewallL3FirewallRules');
const UpdateNetworkApplianceFirewallL7FirewallRules =
  require('../lib/Models/UpdateNetworkApplianceFirewallL7FirewallRules');
const Rule4 = require('../lib/Models/Rule4');
const UpdateNetworkApplianceFirewallOneToManyNatRules =
  require('../lib/Models/UpdateNetworkApplianceFirewallOneToManyNatRules');
const Rule5 = require('../lib/Models/Rule5');
const PortRule = require('../lib/Models/PortRule');
const UpdateNetworkApplianceFirewallOneToOneNatRules =
  require('../lib/Models/UpdateNetworkApplianceFirewallOneToOneNatRules');
const Rule6 = require('../lib/Models/Rule6');
const AllowedInbound = require('../lib/Models/AllowedInbound');
const UpdateNetworkApplianceFirewallPortForwardingRules =
  require('../lib/Models/UpdateNetworkApplianceFirewallPortForwardingRules');
const Rule7 = require('../lib/Models/Rule7');
const UpdateNetworkAppliancePort = require('../lib/Models/UpdateNetworkAppliancePort');
const UpdateNetworkApplianceSecurityIntrusion =
  require('../lib/Models/UpdateNetworkApplianceSecurityIntrusion');
const ProtectedNetworks = require('../lib/Models/ProtectedNetworks');
const UpdateNetworkApplianceSecurityMalware =
  require('../lib/Models/UpdateNetworkApplianceSecurityMalware');
const AllowedUrl = require('../lib/Models/AllowedUrl');
const AllowedFile = require('../lib/Models/AllowedFile');
const UpdateNetworkApplianceSingleLan = require('../lib/Models/UpdateNetworkApplianceSingleLan');
const CreateNetworkApplianceStaticRoute =
  require('../lib/Models/CreateNetworkApplianceStaticRoute');
const UpdateNetworkApplianceStaticRoute =
  require('../lib/Models/UpdateNetworkApplianceStaticRoute');
const ReservedIpRange2 = require('../lib/Models/ReservedIpRange2');
const UpdateNetworkApplianceTrafficShaping =
  require('../lib/Models/UpdateNetworkApplianceTrafficShaping');
const GlobalBandwidthLimits = require('../lib/Models/GlobalBandwidthLimits');
const CreateNetworkApplianceTrafficShapingCustomPerformanceClass =
  require('../lib/Models/CreateNetworkApplianceTrafficShapingCustomPerformanceClass');
const UpdateNetworkApplianceTrafficShapingCustomPerformanceClass =
  require('../lib/Models/UpdateNetworkApplianceTrafficShapingCustomPerformanceClass');
const UpdateNetworkApplianceTrafficShapingRules =
  require('../lib/Models/UpdateNetworkApplianceTrafficShapingRules');
const Rule8 = require('../lib/Models/Rule8');
const Definition = require('../lib/Models/Definition');
const PerClientBandwidthLimits = require('../lib/Models/PerClientBandwidthLimits');
const BandwidthLimits = require('../lib/Models/BandwidthLimits');
const UpdateNetworkApplianceTrafficShapingUplinkBandwidth =
  require('../lib/Models/UpdateNetworkApplianceTrafficShapingUplinkBandwidth');
const BandwidthLimits1 = require('../lib/Models/BandwidthLimits1');
const Wan11 = require('../lib/Models/Wan11');
const Wan21 = require('../lib/Models/Wan21');
const Cellular = require('../lib/Models/Cellular');
const UpdateNetworkApplianceTrafficShapingUplinkSelection =
  require('../lib/Models/UpdateNetworkApplianceTrafficShapingUplinkSelection');
const WanTrafficUplinkPreference = require('../lib/Models/WanTrafficUplinkPreference');
const TrafficFilter = require('../lib/Models/TrafficFilter');
const Value = require('../lib/Models/Value');
const Source = require('../lib/Models/Source');
const Destination1 = require('../lib/Models/Destination1');
const VpnTrafficUplinkPreference = require('../lib/Models/VpnTrafficUplinkPreference');
const TrafficFilter1 = require('../lib/Models/TrafficFilter1');
const Value1 = require('../lib/Models/Value1');
const Source1 = require('../lib/Models/Source1');
const Destination2 = require('../lib/Models/Destination2');
const PerformanceClass = require('../lib/Models/PerformanceClass');
const CreateNetworkApplianceVlan = require('../lib/Models/CreateNetworkApplianceVlan');
const UpdateNetworkApplianceVlansSettings =
  require('../lib/Models/UpdateNetworkApplianceVlansSettings');
const UpdateNetworkApplianceVlan = require('../lib/Models/UpdateNetworkApplianceVlan');
const DhcpOption1 = require('../lib/Models/DhcpOption1');
const UpdateNetworkApplianceVpnBgp = require('../lib/Models/UpdateNetworkApplianceVpnBgp');
const Neighbor = require('../lib/Models/Neighbor');
const UpdateNetworkApplianceVpnSiteToSiteVpn =
  require('../lib/Models/UpdateNetworkApplianceVpnSiteToSiteVpn');
const Hub = require('../lib/Models/Hub');
const Subnet = require('../lib/Models/Subnet');
const UpdateNetworkApplianceWarmSpare = require('../lib/Models/UpdateNetworkApplianceWarmSpare');
const BindNetwork = require('../lib/Models/BindNetwork');
const CreateNetworkCameraQualityRetentionProfile =
  require('../lib/Models/CreateNetworkCameraQualityRetentionProfile');
const VideoSettings = require('../lib/Models/VideoSettings');
const MV21MV71 = require('../lib/Models/MV21MV71');
const MV12MV22MV72 = require('../lib/Models/MV12MV22MV72');
const MV32 = require('../lib/Models/MV32');
const MV12WE = require('../lib/Models/MV12WE');
const MV22XMV72X = require('../lib/Models/MV22XMV72X');
const UpdateNetworkCameraQualityRetentionProfile =
  require('../lib/Models/UpdateNetworkCameraQualityRetentionProfile');
const UpdateNetworkCellularGatewayConnectivityMonitoringDestinations =
  require('../lib/Models/UpdateNetworkCellularGatewayConnectivityMonitoringDestinations');
const UpdateNetworkCellularGatewayDhcp = require('../lib/Models/UpdateNetworkCellularGatewayDhcp');
const UpdateNetworkCellularGatewaySubnetPool =
  require('../lib/Models/UpdateNetworkCellularGatewaySubnetPool');
const UpdateNetworkCellularGatewayUplink =
  require('../lib/Models/UpdateNetworkCellularGatewayUplink');
const BandwidthLimits2 = require('../lib/Models/BandwidthLimits2');
const ProvisionNetworkClients = require('../lib/Models/ProvisionNetworkClients');
const Client = require('../lib/Models/Client');
const PoliciesBySecurityAppliance = require('../lib/Models/PoliciesBySecurityAppliance');
const GeneratedObject = require('../lib/Models/GeneratedObject');
const M10 = require('../lib/Models/M10');
const UpdateNetworkClientPolicy = require('../lib/Models/UpdateNetworkClientPolicy');
const UpdateNetworkClientSplashAuthorizationStatus =
  require('../lib/Models/UpdateNetworkClientSplashAuthorizationStatus');
const GeneratedObject10 = require('../lib/Models/GeneratedObject10');
const GeneratedObject11 = require('../lib/Models/GeneratedObject11');
const GeneratedObject12 = require('../lib/Models/GeneratedObject12');
const GeneratedObject13 = require('../lib/Models/GeneratedObject13');
const GeneratedObject14 = require('../lib/Models/GeneratedObject14');
const GeneratedObject15 = require('../lib/Models/GeneratedObject15');
const GeneratedObject16 = require('../lib/Models/GeneratedObject16');
const GeneratedObject17 = require('../lib/Models/GeneratedObject17');
const GeneratedObject18 = require('../lib/Models/GeneratedObject18');
const GeneratedObject19 = require('../lib/Models/GeneratedObject19');
const M101 = require('../lib/Models/M101');
const M111 = require('../lib/Models/M111');
const M121 = require('../lib/Models/M121');
const M131 = require('../lib/Models/M131');
const M141 = require('../lib/Models/M141');
const ClaimNetworkDevices = require('../lib/Models/ClaimNetworkDevices');
const RemoveNetworkDevices = require('../lib/Models/RemoveNetworkDevices');
const UpdateNetworkFirmwareUpgrades = require('../lib/Models/UpdateNetworkFirmwareUpgrades');
const UpgradeWindow = require('../lib/Models/UpgradeWindow');
const Products = require('../lib/Models/Products');
const Wireless = require('../lib/Models/Wireless');
const NextUpgrade = require('../lib/Models/NextUpgrade');
const ToVersion = require('../lib/Models/ToVersion');
const Switch = require('../lib/Models/Switch');
const Appliance = require('../lib/Models/Appliance');
const Camera = require('../lib/Models/Camera');
const VmxHost = require('../lib/Models/VmxHost');
const Environmental = require('../lib/Models/Environmental');
const CellularGateway = require('../lib/Models/CellularGateway');
const CreateNetworkFirmwareUpgradesRollback =
  require('../lib/Models/CreateNetworkFirmwareUpgradesRollback');
const Reason = require('../lib/Models/Reason');
const ToVersion7 = require('../lib/Models/ToVersion7');
const CreateNetworkFloorPlan = require('../lib/Models/CreateNetworkFloorPlan');
const Center = require('../lib/Models/Center');
const BottomLeftCorner = require('../lib/Models/BottomLeftCorner');
const BottomRightCorner = require('../lib/Models/BottomRightCorner');
const TopLeftCorner = require('../lib/Models/TopLeftCorner');
const TopRightCorner = require('../lib/Models/TopRightCorner');
const UpdateNetworkFloorPlan = require('../lib/Models/UpdateNetworkFloorPlan');
const Center1 = require('../lib/Models/Center1');
const CreateNetworkGroupPolicy = require('../lib/Models/CreateNetworkGroupPolicy');
const Scheduling = require('../lib/Models/Scheduling');
const Monday = require('../lib/Models/Monday');
const Tuesday = require('../lib/Models/Tuesday');
const Wednesday = require('../lib/Models/Wednesday');
const Thursday = require('../lib/Models/Thursday');
const Friday = require('../lib/Models/Friday');
const Saturday = require('../lib/Models/Saturday');
const Sunday = require('../lib/Models/Sunday');
const Bandwidth = require('../lib/Models/Bandwidth');
const BandwidthLimits3 = require('../lib/Models/BandwidthLimits3');
const FirewallAndTrafficShaping = require('../lib/Models/FirewallAndTrafficShaping');
const TrafficShapingRule = require('../lib/Models/TrafficShapingRule');
const L3FirewallRule = require('../lib/Models/L3FirewallRule');
const L7FirewallRule = require('../lib/Models/L7FirewallRule');
const ContentFiltering = require('../lib/Models/ContentFiltering');
const AllowedUrlPatterns = require('../lib/Models/AllowedUrlPatterns');
const BlockedUrlPatterns = require('../lib/Models/BlockedUrlPatterns');
const BlockedUrlCategories = require('../lib/Models/BlockedUrlCategories');
const VlanTagging = require('../lib/Models/VlanTagging');
const BonjourForwarding = require('../lib/Models/BonjourForwarding');
const Rule9 = require('../lib/Models/Rule9');
const UpdateNetworkGroupPolicy = require('../lib/Models/UpdateNetworkGroupPolicy');
const CreateNetworkMerakiAuthUser = require('../lib/Models/CreateNetworkMerakiAuthUser');
const Authorization = require('../lib/Models/Authorization');
const UpdateNetworkMerakiAuthUser = require('../lib/Models/UpdateNetworkMerakiAuthUser');
const Authorization1 = require('../lib/Models/Authorization1');
const CreateNetworkMqttBroker = require('../lib/Models/CreateNetworkMqttBroker');
const UpdateNetworkMqttBroker = require('../lib/Models/UpdateNetworkMqttBroker');
const UpdateNetworkNetflow = require('../lib/Models/UpdateNetworkNetflow');
const CreateNetworkPiiRequest = require('../lib/Models/CreateNetworkPiiRequest');
const UpdateNetworkSettings = require('../lib/Models/UpdateNetworkSettings');
const SecureConnect = require('../lib/Models/SecureConnect');
const CreateNetworkSmBypassActivationLockAttempt =
  require('../lib/Models/CreateNetworkSmBypassActivationLockAttempt');
const CheckinNetworkSmDevices = require('../lib/Models/CheckinNetworkSmDevices');
const UpdateNetworkSmDevicesFields = require('../lib/Models/UpdateNetworkSmDevicesFields');
const DeviceFields = require('../lib/Models/DeviceFields');
const LockNetworkSmDevices = require('../lib/Models/LockNetworkSmDevices');
const ModifyNetworkSmDevicesTags = require('../lib/Models/ModifyNetworkSmDevicesTags');
const MoveNetworkSmDevices = require('../lib/Models/MoveNetworkSmDevices');
const WipeNetworkSmDevices = require('../lib/Models/WipeNetworkSmDevices');
const CreateNetworkSmTargetGroup = require('../lib/Models/CreateNetworkSmTargetGroup');
const UpdateNetworkSmTargetGroup = require('../lib/Models/UpdateNetworkSmTargetGroup');
const UpdateNetworkSnmp = require('../lib/Models/UpdateNetworkSnmp');
const User = require('../lib/Models/User');
const UpdateNetworkSwitchAccessControlLists =
  require('../lib/Models/UpdateNetworkSwitchAccessControlLists');
const Rule11 = require('../lib/Models/Rule11');
const CreateNetworkSwitchAccessPolicy = require('../lib/Models/CreateNetworkSwitchAccessPolicy');
const RadiusServer = require('../lib/Models/RadiusServer');
const RadiusAccountingServer = require('../lib/Models/RadiusAccountingServer');
const UpdateNetworkSwitchAccessPolicy = require('../lib/Models/UpdateNetworkSwitchAccessPolicy');
const UpdateNetworkSwitchAlternateManagementInterface =
  require('../lib/Models/UpdateNetworkSwitchAlternateManagementInterface');
const Switch1 = require('../lib/Models/Switch1');
const UpdateNetworkSwitchDhcpServerPolicy =
  require('../lib/Models/UpdateNetworkSwitchDhcpServerPolicy');
const UpdateNetworkSwitchDscpToCosMappings =
  require('../lib/Models/UpdateNetworkSwitchDscpToCosMappings');
const Mapping = require('../lib/Models/Mapping');
const CreateNetworkSwitchLinkAggregation =
  require('../lib/Models/CreateNetworkSwitchLinkAggregation');
const SwitchPort = require('../lib/Models/SwitchPort');
const SwitchProfilePort = require('../lib/Models/SwitchProfilePort');
const UpdateNetworkSwitchLinkAggregation =
  require('../lib/Models/UpdateNetworkSwitchLinkAggregation');
const UpdateNetworkSwitchMtu = require('../lib/Models/UpdateNetworkSwitchMtu');
const Override = require('../lib/Models/Override');
const CreateNetworkSwitchPortSchedule = require('../lib/Models/CreateNetworkSwitchPortSchedule');
const PortSchedule = require('../lib/Models/PortSchedule');
const UpdateNetworkSwitchPortSchedule = require('../lib/Models/UpdateNetworkSwitchPortSchedule');
const CreateNetworkSwitchQosRule = require('../lib/Models/CreateNetworkSwitchQosRule');
const UpdateNetworkSwitchQosRulesOrder = require('../lib/Models/UpdateNetworkSwitchQosRulesOrder');
const UpdateNetworkSwitchQosRule = require('../lib/Models/UpdateNetworkSwitchQosRule');
const UpdateNetworkSwitchRoutingMulticast =
  require('../lib/Models/UpdateNetworkSwitchRoutingMulticast');
const DefaultSettings = require('../lib/Models/DefaultSettings');
const Override1 = require('../lib/Models/Override1');
const CreateNetworkSwitchRoutingMulticastRendezvousPoint =
  require('../lib/Models/CreateNetworkSwitchRoutingMulticastRendezvousPoint');
const UpdateNetworkSwitchRoutingMulticastRendezvousPoint =
  require('../lib/Models/UpdateNetworkSwitchRoutingMulticastRendezvousPoint');
const UpdateNetworkSwitchRoutingOspf = require('../lib/Models/UpdateNetworkSwitchRoutingOspf');
const Area = require('../lib/Models/Area');
const Md5AuthenticationKey = require('../lib/Models/Md5AuthenticationKey');
const UpdateNetworkSwitchSettings = require('../lib/Models/UpdateNetworkSwitchSettings');
const PowerException = require('../lib/Models/PowerException');
const CreateNetworkSwitchStack = require('../lib/Models/CreateNetworkSwitchStack');
const AddNetworkSwitchStack = require('../lib/Models/AddNetworkSwitchStack');
const RemoveNetworkSwitchStack = require('../lib/Models/RemoveNetworkSwitchStack');
const CreateNetworkSwitchStackRoutingInterface =
  require('../lib/Models/CreateNetworkSwitchStackRoutingInterface');
const UpdateNetworkSwitchStackRoutingInterface =
  require('../lib/Models/UpdateNetworkSwitchStackRoutingInterface');
const UpdateNetworkSwitchStackRoutingInterfaceDhcp =
  require('../lib/Models/UpdateNetworkSwitchStackRoutingInterfaceDhcp');
const CreateNetworkSwitchStackRoutingStaticRoute =
  require('../lib/Models/CreateNetworkSwitchStackRoutingStaticRoute');
const UpdateNetworkSwitchStackRoutingStaticRoute =
  require('../lib/Models/UpdateNetworkSwitchStackRoutingStaticRoute');
const UpdateNetworkSwitchStormControl = require('../lib/Models/UpdateNetworkSwitchStormControl');
const UpdateNetworkSwitchStp = require('../lib/Models/UpdateNetworkSwitchStp');
const StpBridgePriority = require('../lib/Models/StpBridgePriority');
const UpdateNetworkSyslogServers = require('../lib/Models/UpdateNetworkSyslogServers');
const Server = require('../lib/Models/Server');
const UpdateNetworkTrafficAnalysis = require('../lib/Models/UpdateNetworkTrafficAnalysis');
const CustomPieChartItem = require('../lib/Models/CustomPieChartItem');
const CreateNetworkWebhooksHttpServer = require('../lib/Models/CreateNetworkWebhooksHttpServer');
const UpdateNetworkWebhooksHttpServer = require('../lib/Models/UpdateNetworkWebhooksHttpServer');
const CreateNetworkWebhooksWebhookTest = require('../lib/Models/CreateNetworkWebhooksWebhookTest');
const UpdateNetworkWirelessAlternateManagementInterface =
  require('../lib/Models/UpdateNetworkWirelessAlternateManagementInterface');
const AccessPoint = require('../lib/Models/AccessPoint');
const UpdateNetworkWirelessBilling = require('../lib/Models/UpdateNetworkWirelessBilling');
const Plan = require('../lib/Models/Plan');
const BandwidthLimits7 = require('../lib/Models/BandwidthLimits7');
const UpdateNetworkWirelessBluetoothSettings =
  require('../lib/Models/UpdateNetworkWirelessBluetoothSettings');
const CreateNetworkWirelessRfProfile = require('../lib/Models/CreateNetworkWirelessRfProfile');
const ApBandSettings = require('../lib/Models/ApBandSettings');
const TwoFourGhzSettings1 = require('../lib/Models/TwoFourGhzSettings1');
const FiveGhzSettings1 = require('../lib/Models/FiveGhzSettings1');
const UpdateNetworkWirelessRfProfile = require('../lib/Models/UpdateNetworkWirelessRfProfile');
const ApBandSettings1 = require('../lib/Models/ApBandSettings1');
const TwoFourGhzSettings2 = require('../lib/Models/TwoFourGhzSettings2');
const FiveGhzSettings2 = require('../lib/Models/FiveGhzSettings2');
const UpdateNetworkWirelessSettings = require('../lib/Models/UpdateNetworkWirelessSettings');
const UpdateNetworkWirelessSsid = require('../lib/Models/UpdateNetworkWirelessSsid');
const Dot11w = require('../lib/Models/Dot11w');
const Dot11r = require('../lib/Models/Dot11r');
const Oauth = require('../lib/Models/Oauth');
const LocalRadius = require('../lib/Models/LocalRadius');
const PasswordAuthentication = require('../lib/Models/PasswordAuthentication');
const CertificateAuthentication = require('../lib/Models/CertificateAuthentication');
const ClientRootCaCertificate = require('../lib/Models/ClientRootCaCertificate');
const Ldap = require('../lib/Models/Ldap');
const Server1 = require('../lib/Models/Server1');
const Credentials = require('../lib/Models/Credentials');
const ServerCaCertificate = require('../lib/Models/ServerCaCertificate');
const ActiveDirectory = require('../lib/Models/ActiveDirectory');
const Server2 = require('../lib/Models/Server2');
const Credentials1 = require('../lib/Models/Credentials1');
const RadiusServer2 = require('../lib/Models/RadiusServer2');
const RadiusAccountingServer2 = require('../lib/Models/RadiusAccountingServer2');
const ApTagsAndVlanId = require('../lib/Models/ApTagsAndVlanId');
const DnsRewrite = require('../lib/Models/DnsRewrite');
const UpdateNetworkWirelessSsidBonjourForwarding =
  require('../lib/Models/UpdateNetworkWirelessSsidBonjourForwarding');
const UpdateNetworkWirelessSsidDeviceTypeGroupPolicies =
  require('../lib/Models/UpdateNetworkWirelessSsidDeviceTypeGroupPolicies');
const DeviceTypePolicy = require('../lib/Models/DeviceTypePolicy');
const UpdateNetworkWirelessSsidFirewallL3FirewallRules =
  require('../lib/Models/UpdateNetworkWirelessSsidFirewallL3FirewallRules');
const Rule13 = require('../lib/Models/Rule13');
const UpdateNetworkWirelessSsidFirewallL7FirewallRules =
  require('../lib/Models/UpdateNetworkWirelessSsidFirewallL7FirewallRules');
const Rule14 = require('../lib/Models/Rule14');
const CreateNetworkWirelessSsidIdentityPsk =
  require('../lib/Models/CreateNetworkWirelessSsidIdentityPsk');
const UpdateNetworkWirelessSsidIdentityPsk =
  require('../lib/Models/UpdateNetworkWirelessSsidIdentityPsk');
const UpdateNetworkWirelessSsidSplashSettings =
  require('../lib/Models/UpdateNetworkWirelessSsidSplashSettings');
const SplashLogo = require('../lib/Models/SplashLogo');
const SplashImage = require('../lib/Models/SplashImage');
const SplashPrepaidFront = require('../lib/Models/SplashPrepaidFront');
const GuestSponsorship = require('../lib/Models/GuestSponsorship');
const Billing = require('../lib/Models/Billing');
const FreeAccess = require('../lib/Models/FreeAccess');
const UpdateNetworkWirelessSsidTrafficShapingRules =
  require('../lib/Models/UpdateNetworkWirelessSsidTrafficShapingRules');
const Rule15 = require('../lib/Models/Rule15');
const UpdateNetworkWirelessSsidVpn = require('../lib/Models/UpdateNetworkWirelessSsidVpn');
const SplitTunnel = require('../lib/Models/SplitTunnel');
const Rule16 = require('../lib/Models/Rule16');
const CreateOrganization = require('../lib/Models/CreateOrganization');
const UpdateOrganization = require('../lib/Models/UpdateOrganization');
const CreateOrganizationActionBatch = require('../lib/Models/CreateOrganizationActionBatch');
const Action = require('../lib/Models/Action');
const UpdateOrganizationActionBatch = require('../lib/Models/UpdateOrganizationActionBatch');
const CreateOrganizationAdmin = require('../lib/Models/CreateOrganizationAdmin');
const Tag = require('../lib/Models/Tag');
const Network = require('../lib/Models/Network');
const UpdateOrganizationAdmin = require('../lib/Models/UpdateOrganizationAdmin');
const UpdateOrganizationApplianceSecurityIntrusion =
  require('../lib/Models/UpdateOrganizationApplianceSecurityIntrusion');
const AllowedRule = require('../lib/Models/AllowedRule');
const UpdateOrganizationApplianceVpnThirdPartyVPNPeers =
  require('../lib/Models/UpdateOrganizationApplianceVpnThirdPartyVPNPeers');
const Peer = require('../lib/Models/Peer');
const IpsecPolicies = require('../lib/Models/IpsecPolicies');
const UpdateOrganizationApplianceVpnVpnFirewallRules =
  require('../lib/Models/UpdateOrganizationApplianceVpnVpnFirewallRules');
const Rule17 = require('../lib/Models/Rule17');
const CreateOrganizationBrandingPolicy = require('../lib/Models/CreateOrganizationBrandingPolicy');
const AdminSettings = require('../lib/Models/AdminSettings');
const HelpSettings = require('../lib/Models/HelpSettings');
const UpdateOrganizationBrandingPoliciesPriorities =
  require('../lib/Models/UpdateOrganizationBrandingPoliciesPriorities');
const UpdateOrganizationBrandingPolicy = require('../lib/Models/UpdateOrganizationBrandingPolicy');
const HelpSettings1 = require('../lib/Models/HelpSettings1');
const ClaimIntoOrganization = require('../lib/Models/ClaimIntoOrganization');
const License = require('../lib/Models/License');
const CloneOrganization = require('../lib/Models/CloneOrganization');
const CreateOrganizationConfigTemplate = require('../lib/Models/CreateOrganizationConfigTemplate');
const UpdateOrganizationConfigTemplate = require('../lib/Models/UpdateOrganizationConfigTemplate');
const UpdateOrganizationConfigTemplateSwitchProfilePort =
  require('../lib/Models/UpdateOrganizationConfigTemplateSwitchProfilePort');
const CreateOrganizationInsightMonitoredMediaServer =
  require('../lib/Models/CreateOrganizationInsightMonitoredMediaServer');
const UpdateOrganizationInsightMonitoredMediaServer =
  require('../lib/Models/UpdateOrganizationInsightMonitoredMediaServer');
const AssignOrganizationLicensesSeats = require('../lib/Models/AssignOrganizationLicensesSeats');
const MoveOrganizationLicenses = require('../lib/Models/MoveOrganizationLicenses');
const MoveOrganizationLicensesSeats = require('../lib/Models/MoveOrganizationLicensesSeats');
const RenewOrganizationLicensesSeats = require('../lib/Models/RenewOrganizationLicensesSeats');
const UpdateOrganizationLicense = require('../lib/Models/UpdateOrganizationLicense');
const UpdateOrganizationLoginSecurity = require('../lib/Models/UpdateOrganizationLoginSecurity');
const CreateOrganizationNetwork = require('../lib/Models/CreateOrganizationNetwork');
const CombineOrganizationNetworks = require('../lib/Models/CombineOrganizationNetworks');
const UpdateOrganizationSaml = require('../lib/Models/UpdateOrganizationSaml');
const CreateOrganizationSamlIdp = require('../lib/Models/CreateOrganizationSamlIdp');
const UpdateOrganizationSamlIdp = require('../lib/Models/UpdateOrganizationSamlIdp');
const CreateOrganizationSamlRole = require('../lib/Models/CreateOrganizationSamlRole');
const Tag2 = require('../lib/Models/Tag2');
const Network2 = require('../lib/Models/Network2');
const UpdateOrganizationSamlRole = require('../lib/Models/UpdateOrganizationSamlRole');
const UpdateOrganizationSnmp = require('../lib/Models/UpdateOrganizationSnmp');
const CloneOrganizationSwitchDevices = require('../lib/Models/CloneOrganizationSwitchDevices');

const classMap = {
    UpdateDevice,
    BlinkDeviceLeds,
    GenerateDeviceCameraSnapshot,
    UpdateDeviceCameraQualityAndRetention,
    UpdateDeviceCameraSense,
    UpdateDeviceCameraVideoSettings,
    UpdateDeviceCellularGatewayLan,
    ReservedIpRange,
    FixedIpAssignment,
    UpdateDeviceCellularGatewayPortForwardingRules,
    Rule,
    UpdateDeviceManagementInterface,
    Wan1,
    Wan2,
    CycleDeviceSwitchPorts,
    UpdateDeviceSwitchPort,
    CreateDeviceSwitchRoutingInterface,
    OspfSettings,
    UpdateDeviceSwitchRoutingInterface,
    OspfSettings1,
    UpdateDeviceSwitchRoutingInterfaceDhcp,
    DhcpOption,
    ReservedIpRange1,
    FixedIpAssignment1,
    CreateDeviceSwitchRoutingStaticRoute,
    UpdateDeviceSwitchRoutingStaticRoute,
    UpdateDeviceSwitchWarmSpare,
    UpdateDeviceWirelessBluetoothSettings,
    UpdateDeviceWirelessRadioSettings,
    TwoFourGhzSettings,
    FiveGhzSettings,
    UpdateNetwork,
    UpdateNetworkAlertsSettings,
    DefaultDestinations,
    Alert,
    AlertDestinations,
    UpdateNetworkApplianceConnectivityMonitoringDestinations,
    Destination,
    UpdateNetworkApplianceContentFiltering,
    UpdateNetworkApplianceFirewallCellularFirewallRules,
    Rule1,
    UpdateNetworkApplianceFirewallFirewalledService,
    UpdateNetworkApplianceFirewallInboundFirewallRules,
    UpdateNetworkApplianceFirewallL3FirewallRules,
    UpdateNetworkApplianceFirewallL7FirewallRules,
    Rule4,
    UpdateNetworkApplianceFirewallOneToManyNatRules,
    Rule5,
    PortRule,
    UpdateNetworkApplianceFirewallOneToOneNatRules,
    Rule6,
    AllowedInbound,
    UpdateNetworkApplianceFirewallPortForwardingRules,
    Rule7,
    UpdateNetworkAppliancePort,
    UpdateNetworkApplianceSecurityIntrusion,
    ProtectedNetworks,
    UpdateNetworkApplianceSecurityMalware,
    AllowedUrl,
    AllowedFile,
    UpdateNetworkApplianceSingleLan,
    CreateNetworkApplianceStaticRoute,
    UpdateNetworkApplianceStaticRoute,
    ReservedIpRange2,
    UpdateNetworkApplianceTrafficShaping,
    GlobalBandwidthLimits,
    CreateNetworkApplianceTrafficShapingCustomPerformanceClass,
    UpdateNetworkApplianceTrafficShapingCustomPerformanceClass,
    UpdateNetworkApplianceTrafficShapingRules,
    Rule8,
    Definition,
    PerClientBandwidthLimits,
    BandwidthLimits,
    UpdateNetworkApplianceTrafficShapingUplinkBandwidth,
    BandwidthLimits1,
    Wan11,
    Wan21,
    Cellular,
    UpdateNetworkApplianceTrafficShapingUplinkSelection,
    WanTrafficUplinkPreference,
    TrafficFilter,
    Value,
    Source,
    Destination1,
    VpnTrafficUplinkPreference,
    TrafficFilter1,
    Value1,
    Source1,
    Destination2,
    PerformanceClass,
    CreateNetworkApplianceVlan,
    UpdateNetworkApplianceVlansSettings,
    UpdateNetworkApplianceVlan,
    DhcpOption1,
    UpdateNetworkApplianceVpnBgp,
    Neighbor,
    UpdateNetworkApplianceVpnSiteToSiteVpn,
    Hub,
    Subnet,
    UpdateNetworkApplianceWarmSpare,
    BindNetwork,
    CreateNetworkCameraQualityRetentionProfile,
    VideoSettings,
    MV21MV71,
    MV12MV22MV72,
    MV32,
    MV12WE,
    MV22XMV72X,
    UpdateNetworkCameraQualityRetentionProfile,
    UpdateNetworkCellularGatewayConnectivityMonitoringDestinations,
    UpdateNetworkCellularGatewayDhcp,
    UpdateNetworkCellularGatewaySubnetPool,
    UpdateNetworkCellularGatewayUplink,
    BandwidthLimits2,
    ProvisionNetworkClients,
    Client,
    PoliciesBySecurityAppliance,
    GeneratedObject,
    M10,
    UpdateNetworkClientPolicy,
    UpdateNetworkClientSplashAuthorizationStatus,
    GeneratedObject10,
    GeneratedObject11,
    GeneratedObject12,
    GeneratedObject13,
    GeneratedObject14,
    GeneratedObject15,
    GeneratedObject16,
    GeneratedObject17,
    GeneratedObject18,
    GeneratedObject19,
    M101,
    M111,
    M121,
    M131,
    M141,
    ClaimNetworkDevices,
    RemoveNetworkDevices,
    UpdateNetworkFirmwareUpgrades,
    UpgradeWindow,
    Products,
    Wireless,
    NextUpgrade,
    ToVersion,
    Switch,
    Appliance,
    Camera,
    VmxHost,
    Environmental,
    CellularGateway,
    CreateNetworkFirmwareUpgradesRollback,
    Reason,
    ToVersion7,
    CreateNetworkFloorPlan,
    Center,
    BottomLeftCorner,
    BottomRightCorner,
    TopLeftCorner,
    TopRightCorner,
    UpdateNetworkFloorPlan,
    Center1,
    CreateNetworkGroupPolicy,
    Scheduling,
    Monday,
    Tuesday,
    Wednesday,
    Thursday,
    Friday,
    Saturday,
    Sunday,
    Bandwidth,
    BandwidthLimits3,
    FirewallAndTrafficShaping,
    TrafficShapingRule,
    L3FirewallRule,
    L7FirewallRule,
    ContentFiltering,
    AllowedUrlPatterns,
    BlockedUrlPatterns,
    BlockedUrlCategories,
    VlanTagging,
    BonjourForwarding,
    Rule9,
    UpdateNetworkGroupPolicy,
    CreateNetworkMerakiAuthUser,
    Authorization,
    UpdateNetworkMerakiAuthUser,
    Authorization1,
    CreateNetworkMqttBroker,
    UpdateNetworkMqttBroker,
    UpdateNetworkNetflow,
    CreateNetworkPiiRequest,
    UpdateNetworkSettings,
    SecureConnect,
    CreateNetworkSmBypassActivationLockAttempt,
    CheckinNetworkSmDevices,
    UpdateNetworkSmDevicesFields,
    DeviceFields,
    LockNetworkSmDevices,
    ModifyNetworkSmDevicesTags,
    MoveNetworkSmDevices,
    WipeNetworkSmDevices,
    CreateNetworkSmTargetGroup,
    UpdateNetworkSmTargetGroup,
    UpdateNetworkSnmp,
    User,
    UpdateNetworkSwitchAccessControlLists,
    Rule11,
    CreateNetworkSwitchAccessPolicy,
    RadiusServer,
    RadiusAccountingServer,
    UpdateNetworkSwitchAccessPolicy,
    UpdateNetworkSwitchAlternateManagementInterface,
    Switch1,
    UpdateNetworkSwitchDhcpServerPolicy,
    UpdateNetworkSwitchDscpToCosMappings,
    Mapping,
    CreateNetworkSwitchLinkAggregation,
    SwitchPort,
    SwitchProfilePort,
    UpdateNetworkSwitchLinkAggregation,
    UpdateNetworkSwitchMtu,
    Override,
    CreateNetworkSwitchPortSchedule,
    PortSchedule,
    UpdateNetworkSwitchPortSchedule,
    CreateNetworkSwitchQosRule,
    UpdateNetworkSwitchQosRulesOrder,
    UpdateNetworkSwitchQosRule,
    UpdateNetworkSwitchRoutingMulticast,
    DefaultSettings,
    Override1,
    CreateNetworkSwitchRoutingMulticastRendezvousPoint,
    UpdateNetworkSwitchRoutingMulticastRendezvousPoint,
    UpdateNetworkSwitchRoutingOspf,
    Area,
    Md5AuthenticationKey,
    UpdateNetworkSwitchSettings,
    PowerException,
    CreateNetworkSwitchStack,
    AddNetworkSwitchStack,
    RemoveNetworkSwitchStack,
    CreateNetworkSwitchStackRoutingInterface,
    UpdateNetworkSwitchStackRoutingInterface,
    UpdateNetworkSwitchStackRoutingInterfaceDhcp,
    CreateNetworkSwitchStackRoutingStaticRoute,
    UpdateNetworkSwitchStackRoutingStaticRoute,
    UpdateNetworkSwitchStormControl,
    UpdateNetworkSwitchStp,
    StpBridgePriority,
    UpdateNetworkSyslogServers,
    Server,
    UpdateNetworkTrafficAnalysis,
    CustomPieChartItem,
    CreateNetworkWebhooksHttpServer,
    UpdateNetworkWebhooksHttpServer,
    CreateNetworkWebhooksWebhookTest,
    UpdateNetworkWirelessAlternateManagementInterface,
    AccessPoint,
    UpdateNetworkWirelessBilling,
    Plan,
    BandwidthLimits7,
    UpdateNetworkWirelessBluetoothSettings,
    CreateNetworkWirelessRfProfile,
    ApBandSettings,
    TwoFourGhzSettings1,
    FiveGhzSettings1,
    UpdateNetworkWirelessRfProfile,
    ApBandSettings1,
    TwoFourGhzSettings2,
    FiveGhzSettings2,
    UpdateNetworkWirelessSettings,
    UpdateNetworkWirelessSsid,
    Dot11w,
    Dot11r,
    Oauth,
    LocalRadius,
    PasswordAuthentication,
    CertificateAuthentication,
    ClientRootCaCertificate,
    Ldap,
    Server1,
    Credentials,
    ServerCaCertificate,
    ActiveDirectory,
    Server2,
    Credentials1,
    RadiusServer2,
    RadiusAccountingServer2,
    ApTagsAndVlanId,
    DnsRewrite,
    UpdateNetworkWirelessSsidBonjourForwarding,
    UpdateNetworkWirelessSsidDeviceTypeGroupPolicies,
    DeviceTypePolicy,
    UpdateNetworkWirelessSsidFirewallL3FirewallRules,
    Rule13,
    UpdateNetworkWirelessSsidFirewallL7FirewallRules,
    Rule14,
    CreateNetworkWirelessSsidIdentityPsk,
    UpdateNetworkWirelessSsidIdentityPsk,
    UpdateNetworkWirelessSsidSplashSettings,
    SplashLogo,
    SplashImage,
    SplashPrepaidFront,
    GuestSponsorship,
    Billing,
    FreeAccess,
    UpdateNetworkWirelessSsidTrafficShapingRules,
    Rule15,
    UpdateNetworkWirelessSsidVpn,
    SplitTunnel,
    Rule16,
    CreateOrganization,
    UpdateOrganization,
    CreateOrganizationActionBatch,
    Action,
    UpdateOrganizationActionBatch,
    CreateOrganizationAdmin,
    Tag,
    Network,
    UpdateOrganizationAdmin,
    UpdateOrganizationApplianceSecurityIntrusion,
    AllowedRule,
    UpdateOrganizationApplianceVpnThirdPartyVPNPeers,
    Peer,
    IpsecPolicies,
    UpdateOrganizationApplianceVpnVpnFirewallRules,
    Rule17,
    CreateOrganizationBrandingPolicy,
    AdminSettings,
    HelpSettings,
    UpdateOrganizationBrandingPoliciesPriorities,
    UpdateOrganizationBrandingPolicy,
    HelpSettings1,
    ClaimIntoOrganization,
    License,
    CloneOrganization,
    CreateOrganizationConfigTemplate,
    UpdateOrganizationConfigTemplate,
    UpdateOrganizationConfigTemplateSwitchProfilePort,
    CreateOrganizationInsightMonitoredMediaServer,
    UpdateOrganizationInsightMonitoredMediaServer,
    AssignOrganizationLicensesSeats,
    MoveOrganizationLicenses,
    MoveOrganizationLicensesSeats,
    RenewOrganizationLicensesSeats,
    UpdateOrganizationLicense,
    UpdateOrganizationLoginSecurity,
    CreateOrganizationNetwork,
    CombineOrganizationNetworks,
    UpdateOrganizationSaml,
    CreateOrganizationSamlIdp,
    UpdateOrganizationSamlIdp,
    CreateOrganizationSamlRole,
    Tag2,
    Network2,
    UpdateOrganizationSamlRole,
    UpdateOrganizationSnmp,
    CloneOrganizationSwitchDevices,
};

/**
 * Factory class to create instances of models and exception classes
 */
class ModelFactory {
    /**
     * Creates instance of a model class
     * @param  modelName  {string}  Name of class to instantiate
     * @returns  {object} Instance of the model class
     */
    static getInstance(modelName) {
        return new classMap[modelName]();
    }
}

module.exports = ModelFactory;
